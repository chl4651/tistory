#include <stdio.h>
#include <malloc.h>
#include <string.h>

int main(int argc, char* argv[])
{
	char output[1024];
	size_t readsize = 0;
	FILE *p1 = NULL;
	FILE *p2 = NULL;
	FILE *p = NULL;
	char *tmp;
	char A[1000][100];
	char B[100];
	int i, count = 0;

	p = popen("pwd","r");
	fgets(B,1024,p);
	printf("%s",B);
	pclose(p);

	//chdir(B);
	
	char command1[150] = "git ls-files `git rev-parse --show-toplevel` --full name";
	char command2[150] = "grep -n ";
	strcat(command2,argv[1]);

	p1 = popen(command1,"r");
	//p = popen("ls","r");
	//if(!p1)
	//{
	//	printf("ERROR1\n");
	//	return -1;
	//}
	//readsize = fread((void*)output,sizeof(char),1024-1,p1);
	while(fgets(A[count],1024,p1))
	{
		count++;
	}
	//if(readsize == 0)
	//{
	//	pclose(p1);
	//	printf("ERROR2\n");
	//	return -1;
	//}
	
	pclose(p1);
	//output[readsize]=0;
	//tmp = strtok(output,"\0");

	//while(tmp!=NULL)
	//{
	//	//strcpy(A[count],tmp);
	//	printf("%s\n",tmp);
	//	tmp = strtok(NULL,"\0");
	//	count++;
	//}
	//printf("%d",count);
	
	strcat(command2," ");
	for(i=0;i<count;i++){
		tmp = strtok(A[i],"\n");
		strcat(command2, " ");
		strcat(command2, tmp);
	}
	//printf("%s",command2);
	
	p2 = popen(command2,"r");
	
	if(!p2)
	{
		printf("ERROR1\n");
		return -1;
	}
	readsize = fread((void*)output,sizeof(char),1024-1,p2);
	
	if(readsize == 0)
	{
		pclose(p2);
		printf("ERROR2\n");
		return -1;
	}
	pclose(p2);
	output[readsize]=0;
	printf("%s",output);
	
	//for(i=0;i<count;i++)
	//	printf("%s",A[i]);
	return 0;
	
}
